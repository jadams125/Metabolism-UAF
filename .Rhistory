############################################### 2021 ################################################
### Import Raw Data ###
# VAUL only has one because data for PT1 was very erroneous
poke.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRuPTbgwOrFhhVETrN4HMpVoHrNVwLSecr0acVH7i8ePtxme0PxX1tR_SQ7Mqlg3iiCOHUFw80NFfA5/pub?output=csv"
poke.stream.2021.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTgmuOVxwxSfNzLsb76OmrUQhYzl6prnjP17ubO4XV7x0T0bMpUX7jX5itel6oPe3HDCORnoYD25IgU/pub?output=csv"
strt.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTBHVco3KO6uDX5ixIteIKLgnLUTe1GIGYK-8WBM2eXn1VWvthOjFIGvmXyVOq3l2vnxiBQQaDzbqE1/pub?output=csv"
strt.stream.2021.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTqHls7RlLhnawrL43INl8xLeRLigkYcLhNaUtpHBCN91YmE0rCpNJqBiwvJKp9d0rDapG_UGid43fC/pub?output=csv"
vaul.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSUpdW2ARqdQmnNzpRIbIyGD24DhBSwL5CHFzAG8bwhOsttnyU2nehzfJ0gG8BZHX2VbSc3W1NikCIH/pub?output=csv"
frch.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQi6_PAev36hNhtcXdBBQk3pyJqBoQEKpV8tSvtZgz_DPdqXSg93-d_FDomNSH_lkNhb7fJJVloxl1g/pub?output=csv"
frch.stream.2021.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vR0NaSrjYnUkQC42v448LFY0EZEr98R6a2gH0FpPlMBwpfEDY80rSzbDOP3OfpB-SI4QQBCOMgoQxd2/pub?output=csv"
moos.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSVsPDDkXNKBU9Ux2qnvtWl-HS0hgXM2cww9_1l2Xz0Vc9C1_KA2Ss56FuS1fq8mESdgqq2Pl5Nvw6o/pub?output=csv"
moos.stream.2021.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRCnhugeQ8EmP9P22kirbLQhPgDwFoPyMmZ4SR05jSHgleJBcUQYjNb3K2w6hGtdu4W-XJixdl8fk6-/pub?output=csv"
# Load Data#
poke.stream.one.2021 <- read.csv(url(poke.stream.2021.url), skip = 1)
poke.stream.two.2021 <- read.csv(url(poke.stream.2021.url.two), skip = 1)
strt.stream.one.2021 <- read.csv(url(strt.stream.2021.url), skip = 1) # Deployed the 7th of May
strt.stream.two.2021 <- read.csv(url(strt.stream.2021.url.two), skip = 1) # Deployed the 19th of May
vaul.stream.one.2021 <- read.csv(url(vaul.stream.2021.url), skip = 1)
frch.stream.one.2021 <- read.csv(url(frch.stream.2021.url), skip = 1) # Deployed the 7th of May
frch.stream.two.2021 <- read.csv(url(frch.stream.2021.url.two), skip = 1) # Deployed the 19th of May
moos.stream.one.2021 <- read.csv(url(moos.stream.2021.url), skip = 1) # Deployed the 7th of May
moos.stream.two.2021 <- read.csv(url(moos.stream.2021.url.two), skip = 1) # Deployed the 19th of May
# Erase columns that are unneeded
poke.stream.one.2021 <- poke.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
poke.stream.two.2021 <- poke.stream.two.2021[,-c(4,5)] # Dont need temperature and barometric pressure
strt.stream.one.2021 <- strt.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
strt.stream.two.2021 <- strt.stream.two.2021[,-c(4,5)] # Dont need temperature and barometric pressure
vaul.stream.one.2021 <- vaul.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
frch.stream.one.2021 <- frch.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
frch.stream.two.2021 <- frch.stream.two.2021[,-c(4,5)] # Dont need temperature and barometric pressure
moos.stream.one.2021 <- moos.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
moos.stream.two.2021 <- moos.stream.two.2021[,-c(4,5)] # Dont need temperature and barometric pressure
# Rename columns
names(poke.stream.one.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(poke.stream.two.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(strt.stream.one.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(strt.stream.two.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(vaul.stream.one.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(frch.stream.one.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(frch.stream.two.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(moos.stream.one.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(moos.stream.two.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
# Input NAs for time
poke.stream.one.2021$DateTimeGMT[poke.stream.one.2021$DateTimeGMT == ""] <- NA
poke.stream.two.2021$DateTimeGMT[poke.stream.two.2021$DateTimeGMT == ""] <- NA
strt.stream.one.2021$DateTimeGMT[strt.stream.one.2021$DateTimeGMT == ""] <- NA
strt.stream.two.2021$DateTimeGMT[strt.stream.two.2021$DateTimeGMT == ""] <- NA
vaul.stream.one.2021$DateTimeGMT[vaul.stream.one.2021$DateTimeGMT == ""] <- NA
frch.stream.one.2021$DateTimeGMT[frch.stream.one.2021$DateTimeGMT == ""] <- NA
frch.stream.two.2021$DateTimeGMT[frch.stream.two.2021$DateTimeGMT == ""] <- NA
moos.stream.one.2021$DateTimeGMT[moos.stream.one.2021$DateTimeGMT == ""] <- NA
moos.stream.two.2021$DateTimeGMT[moos.stream.two.2021$DateTimeGMT == ""] <- NA
# Convert to AK time
poke.stream.one.2021$DateTime <- mdy_hms(poke.stream.one.2021$DateTimeGMT, tz = "GMT")
attributes(poke.stream.one.2021$DateTime)$tzone <- 'America/Anchorage'
poke.stream.two.2021$DateTime <- mdy_hms(poke.stream.two.2021$DateTimeGMT, tz = "GMT")
attributes(poke.stream.two.2021$DateTime)$tzone <- 'America/Anchorage'
strt.stream.one.2021$DateTime <- mdy_hms(strt.stream.one.2021$DateTimeGMT, tz = "GMT")
attributes(strt.stream.one.2021$DateTime)$tzone <- 'America/Anchorage'
strt.stream.two.2021$DateTime <- mdy_hms(strt.stream.two.2021$DateTimeGMT, tz = "GMT")
attributes(strt.stream.two.2021$DateTime)$tzone <- 'America/Anchorage'
vaul.stream.one.2021$DateTime <- mdy_hms(vaul.stream.one.2021$DateTimeGMT, tz = "GMT")
attributes(vaul.stream.one.2021$DateTime)$tzone <- 'America/Anchorage'
frch.stream.one.2021$DateTime <- mdy_hms(frch.stream.one.2021$DateTimeGMT, tz = "GMT")
attributes(frch.stream.one.2021$DateTime)$tzone <- 'America/Anchorage'
frch.stream.two.2021$DateTime <- mdy_hms(frch.stream.two.2021$DateTimeGMT, tz = "GMT")
attributes(frch.stream.two.2021$DateTime)$tzone <- 'America/Anchorage'
moos.stream.one.2021$DateTime <- mdy_hms(moos.stream.one.2021$DateTimeGMT, tz = "GMT")
attributes(moos.stream.one.2021$DateTime)$tzone <- 'America/Anchorage'
moos.stream.two.2021$DateTime <- mdy_hms(moos.stream.two.2021$DateTimeGMT, tz = "GMT")
attributes(moos.stream.two.2021$DateTime)$tzone <- 'America/Anchorage'
# filter out take out of water points #
# Poke #
poke.stream.one.2021 <- poke.stream.one.2021 %>% subset(poke.stream.one.2021$DateTime > "2021-05-12" & poke.stream.one.2021$DateTime < "2021-09-29") # Deployed on the 6th of may and removed on the 29th of september
poke.stream.two.2021 <- poke.stream.two.2021 %>% subset(poke.stream.two.2021$DateTime > "2021-05-06" & poke.stream.two.2021$DateTime < "2021-09-29") # Deployed on the 6th of may and removed on the 29th of september
ggplot(poke.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel))# plot check
poke.one.below.216 <- poke.stream.one.2021.2[which(poke.stream.one.2021.2$WaterLevel < "216"), ] # trying to find the erroneous point in the dataframe
poke.stream.one.2021$DateTime[poke.stream.one.2021$DateTime == "2021-08-10 04:50:00"] <- NA
poke.stream.one.2021$DateTime[poke.stream.one.2021$DateTime == "2021-06-29"] <- NA
ggplot(poke.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) #plot check  # clean for now but definitely have to make a change due to beaver dams
ggplot(poke.stream.two.2021) +
geom_point(aes(x = DateTime, y = WaterLevel))# plot check
poke.two.below.216 <- poke.stream.two.2021[which(poke.stream.two.2021$WaterLevel < "216"), ] # trying to find the erroneous point in the dataframe
poke.stream.two.2021$DateTime[poke.stream.two.2021$DateTime == "2021-06-14 04:00:00"] <- NA
ggplot(poke.stream.two.2021) +
geom_point(aes(x = DateTime, y = WaterLevel))# plot check
# STRT #
ggplot(strt.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
strt.one.above.251.5 <- strt.stream.one.2021[which(strt.stream.one.2021$WaterLevel > "251.5"), ] # trying to find the erroneous point in the dataframe
strt.stream.one.2021 <- strt.stream.one.2021[-c(910:923) , ] # removing erroneous points on 5/13 from 20:15-23:30
strt.one.below.250.25 <- strt.stream.one.2021[which(strt.stream.one.2021$WaterLevel < "250.25"), ] # trying to find the erroneous point in the dataframe
strt.stream.one.2021 <- strt.stream.one.2021[-c(17340:17350) , ] # removing erroneous points on 5/13 from 20:15-23:30
ggplot(strt.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
ggplot(strt.stream.two.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
# Vaul #
ggplot(vaul.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
vaul.one.below.197.75 <- vaul.stream.one.2021[which(vaul.stream.one.2021$WaterLevel < "197.75"), ] # trying to find the erroneous point in the dataframe
vaul.stream.one.2021 <- vaul.stream.one.2021[-c(4777:4793, 16861, 30756:30757) , ] # removing erroneous points
ggplot(vaul.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
# FRCH #
ggplot(frch.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
frch.stream.one.2021 <- frch.stream.one.2021 %>% subset(frch.stream.one.2021$DateTime < "2021-09-27") #  removed on the 28th of september and it appears that there was some ice influence on the 28th
ggplot(frch.stream.two.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
frch.two.below.183.6 <- frch.stream.two.2021[which(frch.stream.two.2021$WaterLevel < "183.6"), ]
frch.stream.two.2021 <- frch.stream.two.2021[-c(12948, 17535,31360,31361) , ] # removing erroneous points
frch.stream.two.2021 <- frch.stream.two.2021 %>% subset(frch.stream.two.2021$DateTime < "2021-09-27") #  removed on the 28th of september and it appears that there was some ice influence on the 28th
ggplot(frch.stream.two.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
# MOOS #
ggplot(moos.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
moos.stream.one.2021 <- moos.stream.one.2021 %>% subset(moos.stream.one.2021$DateTime < "2021-09-27") #  removed on the 28th of september and it appears that there was some ice influence on the 28th
ggplot(moos.stream.two.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
# Combine two PTs into one
poke.stream.two.2021 <- poke.stream.two.2021[1:nrow(poke.stream.one.2021),]
poke.stream.one.2021$Site <- "POKE1" #add column identifier
poke.stream.two.2021$Site <- "POKE2"
poke.pt.2021 <- bind_rows(poke.stream.one.2021, poke.stream.two.2021)
strt.stream.two.2021 <- strt.stream.two.2021[1:nrow(strt.stream.one.2021),]
strt.stream.one.2021$Site <- "STRT1" #add column identifier
strt.stream.two.2021$Site <- "STRT2"
strt.pt.2021 <- bind_rows(strt.stream.one.2021, strt.stream.two.2021)
frch.stream.two.2021 <- frch.stream.two.2021[1:nrow(frch.stream.one.2021),]
frch.stream.one.2021$Site <- "FRCH1" #add column identifier
frch.stream.two.2021$Site <- "FRCH2"
frch.pt.2021 <- bind_rows(frch.stream.one.2021, frch.stream.two.2021)
moos.stream.two.2021 <- moos.stream.two.2021[1:nrow(moos.stream.one.2021),]
moos.stream.one.2021$Site <- "MOOS1" #add column identifier
moos.stream.two.2021$Site <- "MOOS2"
moos.pt.2021 <- bind_rows(moos.stream.one.2021, moos.stream.two.2021)
# Checking closeness between two PT #
plot(x = poke.stream.one.2021$WaterLevel, y = poke.stream.two.2021$WaterLevel, main = "Poker PT comparison",
xlab = "Poker1PT",
ylab = "Poker2PT")
abline(1,1)
plot(x = strt.stream.one.2021$WaterLevel, y = strt.stream.two.2021$WaterLevel, main = "Stuart PT comparison",
xlab = "Stuart1PT",
ylab = "Stuart2PT")
abline(1,1)
plot(x = frch.stream.one.2021$WaterLevel, y = frch.stream.two.2021$WaterLevel, main = "French PT comparison",
xlab = "French1PT",
ylab = "French2PT")
abline(1,1)
plot(x = moos.stream.one.2021$WaterLevel, y = moos.stream.two.2021$WaterLevel, main = "Moose PT comparison",
xlab = "Moose1PT",
ylab = "Moose2PT")
abline(1,1)
View(moos.pt.2020)
View(vaul.stream.2020)
View(frch.stream.two.2020)
View(frch.pt.2020)
View(frch.stream.two.2020)
View(frch.stream.one.2020)
View(strt.pt.2020)
View(moos.stream.two.2020)
### Water Level Plots ###
ggplot(frch.pt.2019) +
geom_line(aes(x = DateTime , y= AbsPTDepth, color = Site), size=1.25) +
xlab("Date") +
ylab("Water Level") +
theme_classic() +
ggtitle("French PT comparison") +
scale_color_brewer(palette = "Paired")
ggplot(vaul.pt.2019) +
geom_line(aes(x = vaul.pt.2019$DateTime , y= vaul.pt.2019$AbsPTDepth), size=1.25) +
xlab("Date") +
ylab("Depth to Sensor") +
theme_classic() +
ggtitle("Vault PT comparison")
ggplot(poke.pt.2019) +
geom_line(aes(x = DateTime , y= AbsPTDepth, color = Site), size=1.25) +
xlab("Date") +
ylab("Water Level") +
theme_classic() +
ggtitle("Poker PT comparison") +
scale_color_brewer(palette = "Paired")
ggplot(strt.stream.two.2019) +
geom_line(aes(x =DateTime , y= AbsPTDepth), size=1.25) +
xlab("Date") +
ylab("Depth to Sensor") +
theme_classic() +
ggtitle("Stuart PT comparison") +
scale_color_brewer(palette = "Paired")
ggplot(moos.pt.2019) +
geom_line(aes(x = DateTime , y= AbsPTDepth), size=1.25) +
xlab("Date") +
ylab("Depth to Sensor") +
theme_classic() +
ggtitle("Moose PT comparison")
all.pt.2019 <- rbind(frch.pt.2019, vaul.pt.2019, poke.pt.2019, strt.pt.2019, moos.pt.2019)
all.pt.2019 <- rbind(frch.pt.2019, vaul.pt.2019, poke.pt.2019, strt.pt.2019, moos.pt.2019)
all.pt.2019 <- rbind(frch.pt.2019, vaul.pt.2019, poke.pt.2019, strt.pt.2019, moos.pt.2019)
all.pt.2019 <- rbind(frch.pt.2019, vaul.pt.2019, poke.pt.2019, strt.stream.two.2019, moos.pt.2019)
plot(x = strt.stream.one.2019$AbsPTDepth, y = strt.stream.two.2019$AbsPTDepth, main = "Stuart PT comparison",
xlab = "Stuart1 PT",
ylab = "Stuart2 PT")
all.pt.2019 <- rbind(frch.pt.2019, vaul.pt.2019, poke.pt.2019, strt.pt.2019, moos.pt.2019)
View(all.pt.2019)
ggplot(moos.pt.2019) +
geom_line(aes(x = DateTime , y= AbsPTDepth), size=1.25) +
xlab("Date") +
ylab("Depth to Sensor") +
theme_classic() +
ggtitle("Moose PT comparison")
### Water Level Plots ###
ggplot(frch.pt.2019) +
geom_line(aes(x = DateTime , y= AbsPTDepth, color = Site), size=1.25) +
xlab("Date") +
ylab("Water Level") +
theme_classic() +
ggtitle("French PT comparison") +
scale_color_brewer(palette = "Paired")
View(moos.pt.2019)
View(poke.stream.one.2019)
strt.dod.combined <- read.csv(file=file.path("C:/Users/jacob/OneDrive - University of Alaska/GitHub/DoD_Discharge/PT_data/2020/STRT/strt.pt.2020.csv"))
View(strt.dod.combined)
#All PT data...
PT.2019.url <- "https://drive.google.com/drive/u/1/folders/1VdtpYHtfxSqp2DRyWTCu4NorvQ5bx_i4"
pt.19.1 <- drive_get(as_id(Q.moos.2019.url))
pt.19_glist <- drive_ls(pt.19.1, pattern = "all.pt.2019.csv")
walk(pt.19_glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))
pt.2019.Data <- read.csv("all.pt.2019.csv",
skip = 0, header = TRUE)
#All PT data...
PT.2019.url <- "https://drive.google.com/drive/u/1/folders/1VdtpYHtfxSqp2DRyWTCu4NorvQ5bx_i4"
pt.19.1 <- drive_get(as_id(Q.moos.2019.url))
#All PT data...
PT.2019.url <- "https://drive.google.com/drive/u/1/folders/1VdtpYHtfxSqp2DRyWTCu4NorvQ5bx_i4"
pt.19.1 <- drive_get(as_id(PT.2019.url))
pt.19.1 <- drive_get(as_id(PT.2019.url))
pt.19_glist <- drive_ls(pt.19.1, pattern = "all.pt.2019.csv")
walk(pt.19_glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))
pt.2019.Data <- read.csv("all.pt.2019.csv",
skip = 0, header = TRUE)
View(pt.2019.Data)
View(pt.2019.Data)
frch.data1 <- pt.2019.Data %>% filter(site =="FRCH1")
??filter
?filter()
View(pt.2019.Data)
frch.data1 <- pt.2019.Data %>% filter(Site == "FRCH1")
View(frch.data1)
frch.data2 <- pt.2019.Data %>% filter(Site == "FRCH2")
poke.data2 <- pt.2019.Data %>% filter(Site == "POKE2")
strt.data1 <- pt.2019.Data %>% filter(Site == "STRT1")
strt.data2 <- pt.2019.Data %>% filter(Site == "STRT2")
View(strt.data2)
View(poke.data2)
MOOS.data1 <- pt.2019.Data %>% filter(Site == "MOOS1")
moos.data2 <- pt.2019.Data %>% filter(Site == "MOOS2")
moos.data1 <- pt.2019.Data %>% filter(Site == "MOOS1")
moos.data2 <- pt.2019.Data %>% filter(Site == "MOOS2")
vaul.data1 <- pt.2019.Data %>% filter(Site == "VAUL1")
vaul.data2 <- pt.2019.Data %>% filter(Site == "VAUL2")
View(vaul.data1)
View(vaul.data2)
vaul.data2 <- pt.2019.Data %>% filter(Site == "VAUL2")
View(vaul.data2)
View(pt.2019.Data)
View(frch.data2)
View(poke.data2)
View(strt.data2)
View(moos.data2)
View(vaul.data2)
View(moos.data2)
View(vaul.data2)
?rbind()
?left_join()
poke.2019.pt <- inner_join(poke.data1, poke.data2, by = "DateTime")
poke.data1 <- pt.2019.Data %>% filter(Site == "POKE1")
poke.data2 <- pt.2019.Data %>% filter(Site == "POKE2")
poke.2019.pt <- inner_join(poke.data1, poke.data2, by = "DateTime")
View(poke.2019.pt)
frch.2019.pt <- inner_join(frch.data1, frch.data2, by = "DateTime")
View(frch.2019.pt)
strt.2019.pt <- inner_join(strt.data1, strt.data2, by = "DateTime")
View(strt.2019.pt)
View(strt.data2)
strt.data1 <- pt.2019.Data %>% filter(Site == "STRT1")
strt.data2 <- pt.2019.Data %>% filter(Site == "STRT2")
strt.2019.pt <- inner_join(strt.data1, strt.data2, by = "DateTime")
View(strt.data2)
gc()
gc()
View(strt.data2)
strt.data2$DateTime <- as.POSIXct(paste(strt.data2$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
View(strt.data2)
strt.2019.pt <- inner_join(strt.data1, strt.data2, by = "DateTime")
strt.data1 <- pt.2019.Data %>% filter(Site == "STRT1")
strt.data2 <- pt.2019.Data %>% filter(Site == "STRT2")
strt.data2$DateTime <- as.POSIXct(paste(strt.data2$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
strt.2019.pt <- inner_join(strt.data1, strt.data2, by = "DateTime")
strt.data1 <- pt.2019.Data %>% filter(Site == "STRT1")
strt.data1$DateTime <- as.POSIXct(paste(strt.data1$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
strt.data2 <- pt.2019.Data %>% filter(Site == "STRT2")
strt.data2$DateTime <- as.POSIXct(paste(strt.data2$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
strt.2019.pt <- inner_join(strt.data1, strt.data2, by = "DateTime")
View(strt.2019.pt)
frch.data1 <- pt.2019.Data %>% filter(Site == "FRCH1")
frch.data1$DateTime <- as.POSIXct(paste(frch.data1$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
frch.data2 <- pt.2019.Data %>% filter(Site == "FRCH2")
frch.data2$DateTime <- as.POSIXct(paste(frch.data2$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
frch.2019.pt <- inner_join(frch.data1, frch.data2, by = "DateTime")
poke.data1 <- pt.2019.Data %>% filter(Site == "POKE1")
poke.data1$DateTime <- as.POSIXct(paste(poke.data1$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
poke.data2 <- pt.2019.Data %>% filter(Site == "POKE2")
poke.data2$DateTime <- as.POSIXct(paste(poke.data2$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
poke.2019.pt <- inner_join(poke.data1, poke.data2, by = "DateTime")
strt.data1 <- pt.2019.Data %>% filter(Site == "STRT1")
strt.data1$DateTime <- as.POSIXct(paste(strt.data1$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
strt.data2 <- pt.2019.Data %>% filter(Site == "STRT2")
strt.data2$DateTime <- as.POSIXct(paste(strt.data2$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
strt.2019.pt <- inner_join(strt.data1, strt.data2, by = "DateTime")
View(strt.2019.pt)
#MOOS and VAUL do not have a second PT in 2019
moos.data1 <- pt.2019.Data %>% filter(Site == "MOOS1")
moos.data1$DateTime <- as.POSIXct(paste(moos.data1$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
vaul.data1$DateTime <- as.POSIXct(paste(vaul.data1$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
# Make average depth for each site
frch.2019.pt$avgDepthPT <- (frch.2019.pt$AbsPTDepth.x + frch.2019.pt$AbsPTDepth.y / 2)
View(frch.2019.pt)
frch.data1 <- pt.2019.Data %>% filter(Site == "FRCH1")
frch.data1$DateTime <- as.POSIXct(paste(frch.data1$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
frch.data2 <- pt.2019.Data %>% filter(Site == "FRCH2")
frch.data2$DateTime <- as.POSIXct(paste(frch.data2$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
frch.2019.pt <- inner_join(frch.data1, frch.data2, by = "DateTime")
# Make average depth for each site
frch.2019.pt$avgDepthPT <- ((frch.2019.pt$AbsPTDepth.x + frch.2019.pt$AbsPTDepth.y) / 2)
View(frch.2019.pt)
frch.data1 <- pt.2019.Data %>% filter(Site == "FRCH1")
frch.data1$DateTime <- as.POSIXct(paste(frch.data1$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
frch.data2 <- pt.2019.Data %>% filter(Site == "FRCH2")
frch.data2$DateTime <- as.POSIXct(paste(frch.data2$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
frch.2019.pt <- inner_join(frch.data1, frch.data2, by = "DateTime")
View(frch.2019.pt)
View(frch.data2)
View(frch.data1)
str(frch.data1)
str(frch.data2)
?right_join
frch.2019.pt <- inner_join(frch.data1, frch.data2, by = "DateTime")
View(frch.2019.pt)
poke.data1 <- pt.2019.Data %>% filter(Site == "POKE1")
poke.data1$DateTime <- as.POSIXct(paste(poke.data1$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
poke.data2 <- pt.2019.Data %>% filter(Site == "POKE2")
poke.data2$DateTime <- as.POSIXct(paste(poke.data2$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
poke.2019.pt <- inner_join(poke.data1, poke.data2, by = "DateTime")
View(poke.2019.pt)
frch.2019.pt <- merge(frch.data1, frch.data2, by = "DateTime")
View(frch.2019.pt)
frch.data1 <- pt.2019.Data %>% filter(Site == "FRCH1")
frch.data1$DateTime <- as.POSIXct(paste(frch.data1$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
frch.data2 <- pt.2019.Data %>% filter(Site == "FRCH2")
frch.data2$DateTime <- as.POSIXct(paste(frch.data2$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
View(frch.data2)
View(frch.data1)
frch.2019.pt <- left_join(frch.data1, frch.data2, by = "DateTime")
View(frch.2019.pt)
frch.2019.pt <- inner_join(frch.data1, frch.data2, by = "DateTime")
View(frch.2019.pt)
frch.2019.pt <- right_join(frch.data1, frch.data2, by = "DateTime")
View(frch.2019.pt)
frch.2019.pt <- full_join(frch.data1, frch.data2, by = "DateTime")
View(frch.2019.pt)
frch.2019.pt <- merge(frch.data1, frch.data2, by = "DateTime")
View(frch.2019.pt)
frch.data1$AbsPTDepth - frch.data2$AbsPTDepth
frch.2019.pt$MeanAbsDepth <- (frch.data1$AbsPTDepth + frch.data2$AbsPTDepth)/2
frch.2019.pt$MeanAbsDepth <- ((frch.data1$AbsPTDepth + frch.data2$AbsPTDepth)/2)
frch.2019.pt$MeanAbsDepth <- (frch.data1$AbsPTDepth + frch.data2$AbsPTDepth)
View(frch.data2)
str(frch)
str(frch.data1)
library(panda)
library(pandas)
install.packages("pandas")
??pd.merge
install.packages("pandas")
frch.data1 <- pt.2019.Data %>% filter(Site == "FRCH1")
frch.data2 <- pt.2019.Data %>% filter(Site == "FRCH2")
frch.2019.pt <- inner_join(frch.data1, frch.data2, by = "DateTime")
View(frch.2019.pt)
frch.2019.pt$DateTime <- as.POSIXct(paste(frch.2019.pt$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
frch.2019.pt$DateTime <- as.POSIXct(paste(frch.2019.pt$DateTimeGMT.x), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
View(frch.2019.pt)
frch.data1 <- pt.2019.Data %>% filter(Site == "FRCH1")
frch.data2 <- pt.2019.Data %>% filter(Site == "FRCH2")
View(frch.data1)
frch.2019.pt$DateTime <- as.POSIXct(paste(frch.2019.pt$DateTime.x), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
frch.2019.pt$DateTime <- as.POSIXct(paste(frch.2019.pt$DateTime), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
frch.data1 <- pt.2019.Data %>% filter(Site == "FRCH1")
frch.data2 <- pt.2019.Data %>% filter(Site == "FRCH2")
frch.2019.pt <- inner_join(frch.data1, frch.data2, by = "DateTime")
frch.2019.pt$DateTime <- as.POSIXct(paste(frch.2019.pt$DateTime), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
View(frch.2019.pt)
frch.2019.pt$AvgAbsDepth <- (frch.2019.pt$AbsPTDepth.x + frch.2019.pt$AbsPTDepth.y)/2
View(frch.2019.pt)
frch.data1 <- pt.2019.Data %>% filter(Site == "FRCH1")
frch.data2 <- pt.2019.Data %>% filter(Site == "FRCH2")
frch.2019.pt <- inner_join(frch.data1, frch.data2, by = "DateTime")
frch.2019.pt$DateTime <- as.POSIXct(paste(frch.2019.pt$DateTime), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
frch.2019.pt$AvgAbsDepth <- (frch.2019.pt$AbsPTDepth.x + frch.2019.pt$AbsPTDepth.y)/2
View(frch.2019.pt)
poke.data1 <- pt.2019.Data %>% filter(Site == "POKE1")
poke.data1$DateTime <- as.POSIXct(paste(poke.data1$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
poke.data2 <- pt.2019.Data %>% filter(Site == "POKE2")
poke.data2$DateTime <- as.POSIXct(paste(poke.data2$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
poke.2019.pt <- inner_join(poke.data1, poke.data2, by = "DateTime")
View(poke.2019.pt)
poke.data1 <- pt.2019.Data %>% filter(Site == "POKE1")
poke.data2 <- pt.2019.Data %>% filter(Site == "POKE2")
poke.2019.pt <- inner_join(poke.data1, poke.data2, by = "DateTime")
poke.data1 <- pt.2019.Data %>% filter(Site == "POKE1")
poke.data2 <- pt.2019.Data %>% filter(Site == "POKE2")
poke.2019.pt <- inner_join(poke.data1, poke.data2, by = "DateTime")
poke.2019.pt$DateTime <- as.POSIXct(paste(poke.2019.pt$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
poke.data1 <- pt.2019.Data %>% filter(Site == "POKE1")
poke.data2 <- pt.2019.Data %>% filter(Site == "POKE2")
poke.2019.pt <- inner_join(poke.data1, poke.data2, by = "DateTime")
View(poke.2019.pt)
poke.2019.pt$DateTime <- as.POSIXct(paste(poke.2019.pt$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
View(poke.2019.pt)
poke.data1 <- pt.2019.Data %>% filter(Site == "POKE1")
poke.data2 <- pt.2019.Data %>% filter(Site == "POKE2")
poke.2019.pt <- inner_join(poke.data1, poke.data2, by = "DateTime")
View(poke.2019.pt)
poke.2019.pt$DateTime <- as.POSIXct(paste(poke.2019.pt$DateTime), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
View(poke.2019.pt)
poke.2019.pt$DateTime <- as.POSIXct(paste(poke.2019.pt$DateTime), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
poke.2019.pt$AvgAbsDepth <- (poke.2019.pt$AbsPTDepth.x + poke.2019.pt$AbsPTDepth.y)/2
View(poke.2019.pt)
strt.data1 <- pt.2019.Data %>% filter(Site == "STRT1")
strt.data2 <- pt.2019.Data %>% filter(Site == "STRT2")
strt.2019.pt <- inner_join(strt.data1, strt.data2, by = "DateTime")
strt.data2$DateTime <- as.POSIXct(paste(strt.data2$DateTimeGMT), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
strt.2019.pt$AvgAbsDepth <- (strt.2019.pt$AbsPTDepth.x + strt.2019.pt$AbsPTDepth.y)/2
View(strt.2019.pt)
strt.data1 <- pt.2019.Data %>% filter(Site == "STRT1")
library(ggpubr)
library(anytime)
library(googlesheets4)
library(ggpmisc)
library(plyr)
library(dplyr)
library(lubridate)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(scales)
library(zoo)
library(xts)
library(forecast)
library(googledrive)
library(streamMetabolizer)
library(readr)
#### 2020 ####
exo.all.2020.url <- "https://drive.google.com/drive/u/1/folders/1nNKoIdgP-fdCNRGUbGca_zVujF_16QEM"
exo.all.2020.prt1 <- drive_get(as_id(exo.all.2020.url))
#### 2020 ####
exo.all.2020.url <- "https://drive.google.com/drive/u/1/folders/1nNKoIdgP-fdCNRGUbGca_zVujF_16QEM"
exo.all.2020.prt1 <- drive_get(as_id(exo.all.2020.url))
exo.all.2020.glist <- drive_ls(exo.all.2020.prt1, pattern = "EXO.ALL.csv")
walk(exo.all.2020.glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))
#### 2020 ####
exo.all.2020.url <- "https://drive.google.com/drive/u/1/folders/1nNKoIdgP-fdCNRGUbGca_zVujF_16QEM"
exo.all.2020.prt1 <- drive_get(as_id(exo.all.2020.url))
exo.all.2020.glist <- drive_ls(exo.all.2020.prt1, pattern = "EXO.ALL.csv")
walk(exo.all.2020.glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))
exo.all.2020 <- read.csv("EXO.ALL.csv",)
View(exo.all.2020)
poke.exo.2020 <- exo.all.2020 %>% filter(Site == "POKE")
poke.exo.2020 <- exo.all.2020 %>% filter(site,id == "POKE")
poke.exo.2020 <- exo.all.2020 %>% filter(site.id == "POKE")
poke.exo.2020 <- exo.all.2020 %>% filter(site.ID == "POKE")
View(poke.exo.2020)
#Read processed CSV from DoD 2021 Script
exo.processed.2021 <- read_csv("C:/Users/jacob/OneDrive - University of Alaska/GitHub/DoD_2021/EXO_data/from_internal_harddrive/processed/EXO.processed.csv")
View(exo.processed.2021)
poke.exo.2021 <- exo.processed.2021 %>% filter(site.ID == "POKE")
View(poke.exo.2021)
View(poke.exo.2020)
### 2019 ###
#Read cleaned CSVs from DoD 2019 Script
POKE_EXO_cl.2019 <- read_csv("C:/Users/jacob/OneDrive - University of Alaska/GitHub/DoD_2019/EXO_processed/POKE.EXO.cl.csv")
### 2019 ###
#Read cleaned CSVs from DoD 2019 Script
POKE_EXO_cl.2019 <- read_csv("C:/Users/jacob/OneDrive - University of Alaska/GitHub/DoD_2019/EXO_processed/POKE.EXO.cl.csv")
View(POKE_EXO_cl.2019)
poke.exo.2020$ODO.mgL.calcuated <-
#calc from spreadsheet
poke.exo.2020$ODO.Psat * (0.01* exp(
(-862194900000*(1/(poke.exo.2020$Temp.C+273.15))^4+12438000000*(1/(poke.exo.2020$Temp.C+273.15))^3-66423080*(1/(poke.exo.2020$Temp.C+273.15))^2+157570.1*(1/(poke.exo.2020$Temp.C+273.15))-139.344)
-0* (2140.7*(1/(poke.exo.2020$Temp.C+273.15))^2-10.754*(1/(poke.exo.2020$Temp.C+273.15))+0.017674      )))
View(poke.exo.2020)
str(poke.exo.2020)
poke.exo.2020$ODO.mgL.calcuated <-
#calc from spreadsheet
as.numeric(poke.exo.2020$ODO.Psat) * (0.01* exp(
(-862194900000*(1/(poke.exo.2020$Temp.C+273.15))^4+12438000000*(1/(poke.exo.2020$Temp.C+273.15))^3-66423080*(1/(poke.exo.2020$Temp.C+273.15))^2+157570.1*(1/(poke.exo.2020$Temp.C+273.15))-139.344)
-0* (2140.7*(1/(poke.exo.2020$Temp.C+273.15))^2-10.754*(1/(poke.exo.2020$Temp.C+273.15))+0.017674      )))
View(poke.exo.2020)
View(poke.exo.2021)
